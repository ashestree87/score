---
import QuizLayout from '../../../layouts/QuizLayout.astro';

// Debug info
console.log("Question 5 - URL Parameters:");
console.log("name:", Astro.url.searchParams.get('name'));
console.log("email:", Astro.url.searchParams.get('email'));
console.log("interests:", Astro.url.searchParams.getAll('interests'));
console.log("preferred_resources:", Astro.url.searchParams.getAll('preferred_resources'));
---

<QuizLayout title="Quiz | Final Question" currentStep={5} totalSteps={5}>
	<h1 class="text-2xl font-bold text-primary mb-6">Almost done! One last question...</h1>
	
	<form action="/quiz/results" method="get" class="space-y-6" id="finalForm">
		<!-- Pass along previous data -->
		<input type="hidden" name="name" value={Astro.url.searchParams.get('name') || ''} />
		<input type="hidden" name="email" value={Astro.url.searchParams.get('email') || ''} />
		
		{Astro.url.searchParams.getAll('interests').map(interest => (
			<input type="hidden" name="interests" value={interest} />
		))}
		
		<input type="hidden" name="primary_goal" value={Astro.url.searchParams.get('primary_goal') || ''} />
		<input type="hidden" name="time_commitment" value={Astro.url.searchParams.get('time_commitment') || ''} />
		<input type="hidden" name="experience_level" value={Astro.url.searchParams.get('experience_level') || ''} />
		
		{Astro.url.searchParams.getAll('preferred_resources').map(resource => (
			<input type="hidden" name="preferred_resources" value={resource} />
		))}

		<div>
			<label for="challenges" class="block text-lg font-medium text-gray-900 mb-3">
				What specific challenges or obstacles are you facing right now?
			</label>
			<textarea 
				id="challenges" 
				name="challenges" 
				rows="5" 
				class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
				placeholder="Please describe any specific issues you're dealing with that you'd like help addressing..."
			></textarea>
			<p class="mt-2 text-sm text-gray-500">
				This helps us tailor our recommendations to your unique situation.
			</p>
		</div>
		
		<div>
			<label class="block text-lg font-medium text-gray-900 mb-3">
				How soon do you want to implement solutions?
			</label>
			
			<div class="space-y-3">
				<label class="flex items-center">
					<input 
						type="radio" 
						name="timeline" 
						value="immediately" 
						class="h-4 w-4 text-primary"
						required
					/>
					<span class="ml-2">Immediately (within days)</span>
				</label>
				
				<label class="flex items-center">
					<input 
						type="radio" 
						name="timeline" 
						value="soon" 
						class="h-4 w-4 text-primary"
						required
					/>
					<span class="ml-2">Soon (within weeks)</span>
				</label>
				
				<label class="flex items-center">
					<input 
						type="radio" 
						name="timeline" 
						value="gradually" 
						class="h-4 w-4 text-primary"
						required
					/>
					<span class="ml-2">Gradually (over months)</span>
				</label>
				
				<label class="flex items-center">
					<input 
						type="radio" 
						name="timeline" 
						value="planning" 
						class="h-4 w-4 text-primary"
						required
					/>
					<span class="ml-2">Just planning for the future</span>
				</label>
			</div>
		</div>
		
		<div class="pt-4 flex justify-between">
			<a 
				href={`/quiz/question/4?${new URLSearchParams(Astro.url.searchParams)}`}
				class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
			>
				Previous
			</a>
			<button 
				type="submit" 
				id="finalButton"
				class="inline-flex items-center px-6 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary/90"
			>
				Get Your Results
			</button>
		</div>
	</form>
</QuizLayout> 

<script>
	// Enhanced form submission for the final step
	document.addEventListener('DOMContentLoaded', () => {
		const form = document.getElementById('finalForm') as HTMLFormElement;
		
		if (form) {
			form.addEventListener('submit', (e) => {
				e.preventDefault(); // Prevent default form submission
				
				// Get form data
				const formData = new FormData(form);
				
				// Get all the basic fields
				const name = formData.get('name')?.toString() || '';
				const email = formData.get('email')?.toString() || '';
				const challenges = formData.get('challenges')?.toString() || '';
				const timeline = formData.get('timeline')?.toString() || '';
				
				// Get the arrays
				const interests = formData.getAll('interests').map(value => value.toString());
				const preferredResources = formData.getAll('preferred_resources').map(value => value.toString());
				
				// Get other fields
				const primaryGoal = formData.get('primary_goal')?.toString() || '';
				const timeCommitment = formData.get('time_commitment')?.toString() || '';
				const experienceLevel = formData.get('experience_level')?.toString() || '';
				
				// Log the data for debugging
				console.log('Final form submission data:');
				console.log('Name:', name);
				console.log('Email:', email);
				console.log('Interests:', interests);
				console.log('Primary Goal:', primaryGoal);
				console.log('Time Commitment:', timeCommitment);
				console.log('Experience Level:', experienceLevel);
				console.log('Preferred Resources:', preferredResources);
				console.log('Challenges:', challenges);
				console.log('Timeline:', timeline);
				
				// Validate timeline is selected
				if (!timeline) {
					alert('Please select how soon you want to implement solutions');
					return false;
				}
				
				// Create the results URL with all parameters
				const url = new URL('/quiz/results', window.location.origin);
				
				// Add the basic parameters
				url.searchParams.set('name', name);
				url.searchParams.set('email', email);
				url.searchParams.set('primary_goal', primaryGoal);
				url.searchParams.set('time_commitment', timeCommitment);
				url.searchParams.set('experience_level', experienceLevel);
				url.searchParams.set('challenges', challenges);
				url.searchParams.set('timeline', timeline);
				
				// Add arrays
				interests.forEach(interest => {
					url.searchParams.append('interests', interest);
				});
				
				preferredResources.forEach(resource => {
					url.searchParams.append('preferred_resources', resource);
				});
				
				// Log the final URL
				console.log('Navigating to results URL:', url.toString());
				
				// Navigate to the results page
				window.location.href = url.toString();
			});
		}
	});
</script> 